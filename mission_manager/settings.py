"""
Django settings for mission_manager project.

Generated by 'django-admin startproject' using Django 5.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

import os
from pathlib import Path

# -----------------------------------------------------------------------------
# BASE DIR
# -----------------------------------------------------------------------------
BASE_DIR = Path(__file__).resolve().parent.parent


# -----------------------------------------------------------------------------
# SECURITY
# -----------------------------------------------------------------------------
# WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('SECRET_KEY', 'django-insecure-gjv^jxge9&$8_vs6$es*(0ldst%y__&_k!7vq^7tumn30$u*yd')

# DEBUG mode: read from environment (False by default)
DEBUG = os.getenv('DEBUG', 'False') == 'True'

# Hosts/domain names that are valid for this site
ALLOWED_HOSTS = ['*']
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')

# -----------------------------------------------------------------------------
# APPLICATION DEFINITION
# -----------------------------------------------------------------------------
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'core',
]

AUTH_USER_MODEL = 'core.Utilisateur'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    # Whitenoise will be inserted here dynamically below
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# Insert WhiteNoise middleware right after SecurityMiddleware
whitenoise_index = MIDDLEWARE.index('django.middleware.security.SecurityMiddleware') + 1
MIDDLEWARE.insert(whitenoise_index, 'whitenoise.middleware.WhiteNoiseMiddleware')


ROOT_URLCONF = 'mission_manager.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'core.context_processors.unread_notifications',
            ],
        },
    },
]

WSGI_APPLICATION = 'mission_manager.wsgi.application'


# -----------------------------------------------------------------------------
# DATABASES
# -----------------------------------------------------------------------------
# Default: MySQL local; in prod read from env vars or DATABASE_URL (for Heroku)
#DATABASES = {
#    'default': {
#        'ENGINE': 'django.db.backends.mysql',
#        'NAME': os.getenv('MYSQL_DATABASE', 'Gestion_Mission'),
#        'USER': os.getenv('MYSQL_USER', 'root'),
#        'PASSWORD': os.getenv('MYSQL_PASSWORD', ''),
#        'HOST': os.getenv('MYSQL_HOST', 'localhost'),
#        'PORT': os.getenv('MYSQL_PORT', '3306'),
#    }
#}
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': os.getenv('MYSQL_DATABASE', 'Gestion_Mission'),
        'USER': os.getenv('MYSQL_USER', 'admin'),
        'PASSWORD': os.getenv('MYSQL_PASSWORD', 'NIVb7Pbu'),
        'HOST': os.getenv('MYSQL_HOST', 'mysql-199930-0.cloudclusters.net'),
        'PORT': os.getenv('MYSQL_PORT', '10073'),
    }
}

# -----------------------------------------------------------------------------
# PASSWORD VALIDATION
# -----------------------------------------------------------------------------
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# -----------------------------------------------------------------------------
# INTERNATIONALIZATION
# -----------------------------------------------------------------------------
LANGUAGE_CODE = 'fr-fr'
TIME_ZONE = 'Europe/Paris'
USE_I18N = True
USE_TZ = True


# -----------------------------------------------------------------------------
# REDIRECTIONS & AUTH
# -----------------------------------------------------------------------------
LOGIN_REDIRECT_URL = '/dashboard/'
LOGIN_URL = '/connexion/'


# -----------------------------------------------------------------------------
# STATIC FILES (CSS, JavaScript, Images)
# -----------------------------------------------------------------------------
STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'

# Optional: use WhiteNoise compressed storage for production
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'


# -----------------------------------------------------------------------------
# MEDIA FILES (Uploaded files)
# -----------------------------------------------------------------------------
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'


# -----------------------------------------------------------------------------
# DEFAULT AUTO FIELD
# -----------------------------------------------------------------------------
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# -----------------------------------------------------------------------------
# EMAIL (DEV)
# -----------------------------------------------------------------------------
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
EMAIL_HOST = 'localhost'
EMAIL_PORT = 1025
EMAIL_USE_TLS = False
EMAIL_USE_SSL = False
DEFAULT_FROM_EMAIL = 'noreply@missionmanager.com'
