# Generated by Django 5.2.3 on 2025-07-11 16:20

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=255, verbose_name="Nom de l'entreprise")),
                ('contact', models.CharField(max_length=255, verbose_name='Personne à contacter')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('telephone', models.CharField(max_length=20, verbose_name='Téléphone')),
                ('adresse', models.TextField(verbose_name='Adresse')),
            ],
            options={
                'verbose_name': 'Client',
                'verbose_name_plural': 'Clients',
            },
        ),
        migrations.CreateModel(
            name='Utilisateur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('administrateur', 'Administrateur'), ('employe', 'Employé'), ('freelance', 'Freelance')], max_length=20, verbose_name='Rôle')),
                ('telephone', models.CharField(blank=True, max_length=20, verbose_name='Téléphone')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Utilisateur',
                'verbose_name_plural': 'Utilisateurs',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Mission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=255, verbose_name='Titre de la mission')),
                ('description', models.TextField(verbose_name='Description')),
                ('nature', models.CharField(max_length=255, verbose_name='Nature de la mission')),
                ('date', models.DateField(verbose_name='Date de début')),
                ('lieu', models.CharField(max_length=255, verbose_name='Lieu')),
                ('frequence', models.CharField(blank=True, max_length=100, verbose_name='Fréquence')),
                ('statut', models.CharField(choices=[('en_attente', 'En attente'), ('en_cours', 'En cours'), ('terminee', 'Terminée')], default='en_attente', max_length=50, verbose_name='Statut')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('assigne_a', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='missions', to=settings.AUTH_USER_MODEL, verbose_name='Assigné à')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='missions', to='core.client', verbose_name='Client')),
            ],
            options={
                'verbose_name': 'Mission',
                'verbose_name_plural': 'Missions',
            },
        ),
        migrations.CreateModel(
            name='Intervention',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name="Date d'intervention")),
                ('lieu', models.CharField(max_length=255, verbose_name='Lieu')),
                ('compte_rendu', models.TextField(blank=True, verbose_name='Compte rendu')),
                ('ressources_utilisees', models.TextField(blank=True, verbose_name='Ressources utilisées')),
                ('statut', models.CharField(choices=[('a_faire', 'À faire'), ('en_cours', 'En cours'), ('terminee', 'Terminée')], default='a_faire', max_length=50, verbose_name='Statut')),
                ('date_cloture', models.DateTimeField(blank=True, null=True, verbose_name='Date de clôture')),
                ('intervenant', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='interventions', to=settings.AUTH_USER_MODEL, verbose_name='Intervenant')),
                ('mission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interventions', to='core.mission', verbose_name='Mission')),
            ],
            options={
                'verbose_name': 'Intervention',
                'verbose_name_plural': 'Interventions',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.CharField(max_length=255, verbose_name='Message')),
                ('type_notification', models.CharField(max_length=50, verbose_name='Type de notification')),
                ('lue', models.BooleanField(default=False, verbose_name='Lue')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('utilisateur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
            },
        ),
        migrations.CreateModel(
            name='Preuve',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fichier', models.FileField(upload_to='preuves/', verbose_name='Fichier')),
                ('type_preuve', models.CharField(choices=[('avant', 'Avant'), ('apres', 'Après')], max_length=20, verbose_name='Type de preuve')),
                ('date_ajout', models.DateTimeField(auto_now_add=True, verbose_name="Date d'ajout")),
                ('intervention', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='preuves', to='core.intervention', verbose_name='Intervention')),
            ],
            options={
                'verbose_name': 'Preuve',
                'verbose_name_plural': 'Preuves',
            },
        ),
    ]
